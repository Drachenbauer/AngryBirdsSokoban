package com.zetcode;

import java.util.ArrayList;

/*
 * # = wall
 * . = nest
 * $ = egg
 * @ = bird
 * * = egg in nest
 * + = bird in nest
 * empty space = empty field
 * 
 * The nest is my version of the target-place
 * The egg is my version of the baggage/box
 * The bird is the player-character.
 */

public class Levels
{
public ArrayList<String> levels = new ArrayList<>();
	
	public Levels()
	{
		levels.add( "  ###\n"
	              + "  #.#\n"
	              + "###$###\n"
	              + "#.$@$.#\n"
	              + "###$###\n"
	              + "  #.#\n"
	              + "  ###\n" );
		
		levels.add( "      ###\n"
                  + "      #.#\n"
                  + "    ### ###\n"
                  + "    #.$ $.#\n"
                  + "  ##### #####\n"
                  + "  #.#*# #*#.#\n"
                  + "###$###$###$###\n"
                  + "#.    $@$    .#\n"
                  + "###$###$###$###\n"
                  + "  #.#*# #*#.#\n"
                  + "  ##### #####\n"
                  + "    #.$ $.#\n"
                  + "    ### ###\n"
                  + "      #.#\n"
                  + "      ###\n" );
		
		levels.add( "   #######\n"
                  + "####     #\n"
                  + "#   .### #\n"
                  + "# # #    ##\n"
                  + "# # $ $#. #\n"
                  + "# #  *  # #\n"
                  + "# .#$ $ # #\n"
                  + "##    # # ###\n"
                  + " # ###.   @ #\n"
                  + " #     ##   #\n"
                  + " ############\n" );
		
		levels.add( "    #####\n"
                  + "    #   #\n"
                  + "    #$  #\n"
                  + "  ###  $##\n"
                  + "  #  $ $ #\n"
                  + "### # ## #   ######\n"
                  + "#   # ## #####  ..#\n"
                  + "# $  $          ..#\n"
                  + "##### ### #@##  ..#\n"
                  + "    #     #########\n"
                  + "    #######\n" );
		
		levels.add( "      ###\n"
                  + "     ## ##\n"
                  + "    ##   ##\n"
                  + "   ##     ##\n"
                  + "  ##  $ $  ##\n"
                  + " ##  .   .  ##\n"
                  + "##           ##\n"
                  + "#  $   +   $  #\n"
                  + "##           ##\n"
                  + " #   .   .   #\n"
                  + " ##   ...   ##\n"
                  + "  #         #\n"
                  + "  ##  $ $  ##\n"
                  + "   #       #\n"
                  + "   ##  $  ##\n"
                  + "    #     #\n"
                  + "    ## $ ##\n"
                  + "     #   #\n"
                  + "     ## ##\n"
                  + "      ###\n" );
		
		levels.add( "################\n"
                  + "#...#  ##  #...#\n"
                  + "#... $ ## $ ...#\n"
                  + "#... $ ## $ ...#\n"
                  + "##   $ ## $   ##\n"
                  + "# $$$$    $$$$ #\n"
                  + "#      $ $     #\n"
                  + "##### $ $  #####\n"
                  + "#####  $@$ #####\n"
                  + "#     $ $      #\n"
                  + "# $$$$    $$$$ #\n"
                  + "##   $ ## $   ##\n"
                  + "#... $ ## $ ...#\n"
                  + "#... $ ## $ ...#\n"
                  + "#...#  ##  #...#\n"
                  + "################\n" );
		
		levels.add( "####### #### #######\n"
                  + "#     # #..# #     #\n"
                  + "# $$  ###..###  $$ #\n"
                  + "#  $  #......#  $  #\n"
                  + "# $$  #......#  $$ #\n"
                  + "#  ######..######  #\n"
                  + "# $#    #..#    #$ #\n"
                  + "#  # $$      $$ #  #\n"
                  + "# $#  ##    ##  #$ #\n"
                  + "#      $ ## $      #\n"
                  + "#  #  ## @  ##  #  #\n"
                  + "####################\n" );
	}
} 
